/*
 * Copyright 2016 OlivÃ©r Falvai
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

plugins {
    id "org.sonarqube" version "2.6-rc1"
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.gfx.ribbonizer'
apply plugin: 'io.fabric'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'com.google.firebase.firebase-perf'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

// This file contains private information, create your own by renaming
// localconfig.example.properties in the project folder
def localConfig = new Properties()
localConfig.load(new FileInputStream(project.file("localconfig.properties")))

def appVersionCode = 14
def appVersionName = "1.4.2"
def supportLibVersion = "26.1.0"
def firebaseVersion = "11.6.2"

android {
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    defaultConfig {
        applicationId "com.ofalvai.bpinfo"
        signingConfig signingConfigs.config

        minSdkVersion 16
        targetSdkVersion 26

        versionCode appVersionCode
        versionName appVersionName

        resConfigs "en", "hu"
        resValue "string", "APP_VERSION", appVersionName
        buildConfigField "String", "BACKEND_URL", "\"${localConfig.backendUrl}\""
        manifestPlaceholders = [fabricApiKey: localConfig.fabricApiKey]

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"

            resValue "string", "PACKAGE_NAME_REAL", "com.ofalvai.bpinfo.debug"
        }

        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            resValue "string", "PACKAGE_NAME_REAL", "com.ofalvai.bpinfo"
        }
    }

    flavorDimensions "data"

    productFlavors {
        prod {
            dimension "data"
        }
        mock {
            applicationIdSuffix ".mock"
            dimension "data"
        }
    }
}

ribbonizer {
    builder { variant, iconFile ->
        if (variant.flavorName == "mock") {
            return yellowRibbonFilter(variant, iconFile)
        } else if (variant.buildType.name == "debug") {
            return grayRibbonFilter(variant, iconFile)
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile "com.android.support:recyclerview-v7:$supportLibVersion"
    compile "com.android.support:design:$supportLibVersion"
    compile "com.android.support:customtabs:$supportLibVersion"
    compile "com.android.support:support-annotations:$supportLibVersion"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.volley:volley:1.0.0'
    compile ('com.wefika:flowlayout:0.4.1') {
        exclude group: 'com.intellij', module: 'annotations'
    }
    compile 'com.google.dagger:dagger:2.13'
    compile 'org.sufficientlysecure:html-textview:3.4'
    compile 'net.danlew:android.joda:2.9.9'
    compile 'com.jakewharton:process-phoenix:2.0.0'
    compile 'com.jakewharton:butterknife:8.8.1'
    compile 'org.greenrobot:eventbus:3.1.1'
    compile "com.google.firebase:firebase-core:$firebaseVersion"
    compile "com.google.firebase:firebase-perf:$firebaseVersion"
    compile "com.google.firebase:firebase-messaging:$firebaseVersion"
    compile 'com.jakewharton.timber:timber:4.6.0'
    compile 'com.jakewharton:kotterknife:0.1.0-SNAPSHOT'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.6@aar') {
        transitive = true
    }
    kapt 'com.google.dagger:dagger-compiler:2.13'
    kapt 'com.jakewharton:butterknife-compiler:8.8.1'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2') {
        // Necessary if your app targets Marshmallow (since Espresso
        // hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test:runner:0.5') {
        // Necessary if your app targets Marshmallow (since the test runner
        // hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test:rules:0.5') {
        // Necessary if your app targets Marshmallow (since the test runner
        // hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:2.13.0"
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
}

sonarqube {
    properties {
        def libraries = project.android.sdkDirectory.getPath() + "/platforms/android-26/android.jar"

        property "sonar.projectName", "BPInfo"
        property "sonar.projectKey", "BPInfo"
        property "sonar.sources", "src/main/java,src/main/res"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.projectVersion", appVersionCode
        property "sonar.binaries", "build/intermediates/classes/prod/debug"
        property "sonar.libraries", libraries
        property "sonar.java.binaries", "build/intermediates/classes/prod/debug"
        property "sonar.java.libraries", libraries
    }
}

apply plugin: 'com.google.gms.google-services'
